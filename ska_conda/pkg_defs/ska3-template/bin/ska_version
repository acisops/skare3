#!%{PREFIX}%/bin/python
"""
Create and return an environment version string based on the packages
in an environment.  The ska3-* package versions are called out explicitly,
followed by a sha based on the versions of the other packages.

Example:

core-2018.07.16:flight-2018.07.16:pinned-2018.07.16:template-0.1:sha-f272ef6

"""

import subprocess
import json
import hashlib
# Conda list output appears already sorted by package name
pkgs_json = subprocess.check_output(["conda", "list", "--json"])
pkgs = json.loads(pkgs_json)
ska3_pkgs = [f"{pkg['name'].lstrip('ska3-')}-{pkg['version']}"
             for pkg in pkgs if pkg['name'].startswith('ska3-')]
# Get a list of all the other conda pkgs and their versions (not builds or channels)
all_pkgs = [f"{pkg['name']}-{pkg['version']}"
            for pkg in pkgs if not pkg['name'].startswith('ska3-')]
pkgs = subprocess.check_output(["conda", "list"], encoding='utf-8').splitlines()
# Add the 'pip' installed packages to that list
all_pkgs.extend(pkg for pkg in pkgs if '<pip>' in pkg)
sha_tag = hashlib.sha1(''.join(all_pkgs).encode('utf-8')).hexdigest()[0:7]
ska3_pkgs.append(f'sha-{sha_tag}')
print(":".join(ska3_pkgs))
